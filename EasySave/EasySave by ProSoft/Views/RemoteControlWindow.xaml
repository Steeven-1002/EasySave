<Window x:Class="EasySave_by_ProSoft.Views.RemoteControlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EasySave_by_ProSoft.Views"
        xmlns:network="clr-namespace:EasySave_by_ProSoft.Network"
        mc:Ignorable="d"
        Title="EasySave Remote Control" Height="600" Width="900"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        
        <local:BoolToRunningConverter x:Key="BoolToRunningConverter" />
        <local:BoolToColorConverter x:Key="BoolToColorConverter" />
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header with logo -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <Image Height="40" Width="40" Source="/Views/Images/EasySave_Black.png" VerticalAlignment="Center" Margin="0,0,10,0"/>
            <TextBlock Text="EasySave Remote Control" FontSize="24" FontWeight="SemiBold" VerticalAlignment="Center"/>
        </StackPanel>
        
        <!-- Connection Panel -->
        <Grid Grid.Row="1" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <Label Grid.Column="0" Content="Server Address:" VerticalAlignment="Center"/>
            <TextBox Grid.Column="1" Text="{Binding ServerAddress}" Margin="5,0" Padding="5,2" 
                     IsEnabled="{Binding IsConnected, Converter={StaticResource InverseBooleanConverter}}"/>
            
            <Label Grid.Column="2" Content="Port:" VerticalAlignment="Center"/>
            <TextBox Grid.Column="3" Text="{Binding ServerPort}" Width="60" Margin="5,0" Padding="5,2" 
                    IsEnabled="{Binding IsConnected, Converter={StaticResource InverseBooleanConverter}}"/>
            
            <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="10,0,0,0">
                <Button Content="Connect" Command="{Binding ConnectCommand}" Width="80" Margin="0,0,5,0"
                        Visibility="{Binding IsConnected, Converter={StaticResource InverseBooleanConverter}, ConverterParameter=Collapsed}"/>
                <Button Content="Disconnect" Command="{Binding DisconnectCommand}" Width="80"
                        Visibility="{Binding IsConnected, Converter={StaticResource BoolToVisibility}}"/>
            </StackPanel>
        </Grid>
        
        <!-- Status Bar -->
        <Border Grid.Row="1" VerticalAlignment="Bottom" Height="25" Background="#F0F0F0" BorderBrush="#CCCCCC" BorderThickness="1" Margin="0,30,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding ConnectionStatus}" VerticalAlignment="Center" Margin="5,0" />
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0" 
                          Visibility="{Binding IsConnected, Converter={StaticResource BoolToVisibility}}">
                    <TextBlock Text="Business Software: " VerticalAlignment="Center" />
                    <TextBlock Text="{Binding IsBusinessSoftwareRunning, Converter={StaticResource BoolToRunningConverter}}" 
                               Foreground="{Binding IsBusinessSoftwareRunning, Converter={StaticResource BoolToColorConverter}}" 
                               FontWeight="Bold" VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
        </Border>
        
        <!-- Jobs List -->
        <ListView Grid.Row="2" ItemsSource="{Binding Jobs}" Name="JobsListView" Margin="0,10" 
                 BorderThickness="1" BorderBrush="#CCCCCC">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="30">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="120"/>
                    <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Type}" Width="80"/>
                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding StatusDisplay}" Width="80"/>
                    <GridViewColumn Header="Progress" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ProgressBar Value="{Binding ProgressPercentage}" Width="140" Height="18" />
                                    <TextBlock Text="{Binding ProgressPercentage, StringFormat={}{0:F1}%}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              FontSize="11" />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding FormattedTotalSize}" Width="80"/>
                    <GridViewColumn Header="Current File" DisplayMemberBinding="{Binding CurrentSourceFile}" Width="250"/>
                    <GridViewColumn Header="Files" Width="90">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ProcessedFiles, StringFormat={}{0}/{1}, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock.ToolTip>
                                        <TextBlock>
                                            <Run Text="Processed Files: " />
                                            <Run Text="{Binding ProcessedFiles}" />
                                            <Run Text=" / " />
                                            <Run Text="{Binding TotalFiles}" />
                                        </TextBlock>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="Running">
                            <Setter Property="Background" Value="#E8F5E9" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Paused">
                            <Setter Property="Background" Value="#FFF9C4" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Error">
                            <Setter Property="Background" Value="#FFEBEE" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Completed">
                            <Setter Property="Background" Value="#E8EAF6" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        
        <!-- Command buttons -->
        <Grid Grid.Row="3" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="Launch" Command="{Binding LaunchJobsCommand}" Width="110" Height="35" Margin="5" 
                       Background="#4CAF50" Foreground="White" FontWeight="SemiBold">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Pause" Command="{Binding PauseJobsCommand}" Width="110" Height="35" Margin="5" 
                       Background="#FFC107" Foreground="White" FontWeight="SemiBold">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Resume" Command="{Binding ResumeJobsCommand}" Width="110" Height="35" Margin="5" 
                       Background="#2196F3" Foreground="White" FontWeight="SemiBold">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Stop" Command="{Binding StopJobsCommand}" Width="110" Height="35" Margin="5" 
                       Background="#F44336" Foreground="White" FontWeight="SemiBold">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>