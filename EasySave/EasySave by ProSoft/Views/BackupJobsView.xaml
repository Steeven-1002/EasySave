<UserControl x:Class="EasySave_by_ProSoft.Views.BackupJobsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EasySave_by_ProSoft.Views"
             xmlns:localization="clr-namespace:EasySave_by_ProSoft.Localization"
             mc:Ignorable="d" 
             d:DesignHeight="621.282" d:DesignWidth="980">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="{x:Static localization:Resources.BackupWorkManagement}" 
                   Style="{StaticResource HeaderTextBlockStyle}" 
                   Margin="0,0,0,15"/>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ListView x:Name="BackupJobsListView" 
                      Style="{StaticResource ModernListView}"
                      BorderThickness="1" 
                      Margin="0,0,0,15"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      ScrollViewer.IsDeferredScrollingEnabled="True">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="40">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              Checked="BackupJob_CheckChanged"
                                              Unchecked="BackupJob_CheckChanged"
                                              AutomationProperties.Name="{Binding Name, StringFormat='Sélectionner le travail {0}'}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementName}" DisplayMemberBinding="{Binding Name}" Width="150"/>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementSource}" DisplayMemberBinding="{Binding SourcePath}" Width="150"/>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementTarget}" DisplayMemberBinding="{Binding TargetPath}" Width="150"/>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementType}" DisplayMemberBinding="{Binding Type}" Width="80"/>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementStatus}" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Status.State, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status.State}" Value="Running">
                                                        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status.State}" Value="Paused">
                                                        <Setter Property="Foreground" Value="{StaticResource WarningBrush}"/>
                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status.State}" Value="Error">
                                                        <Setter Property="Foreground" Value="{StaticResource DangerBrush}"/>
                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status.State}" Value="Completed">
                                                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static localization:Resources.BackupWorkManagementProgressPercentage}" Width="120">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ProgressBar Value="{Binding Status.ProgressPercentage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="0" Maximum="100" Width="100" />
                                        <TextBlock Text="{Binding Status.ProgressPercentage, StringFormat=\{0:F1\}%}" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center"
                                                   FontSize="11"
                                                   FontWeight="SemiBold"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Actions" Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <!-- Pause Button -->
                                        <Button Width="40" Height="24" 
                                                ToolTip="Pause" 
                                                Margin="2,0" 
                                                Command="{Binding DataContext.PauseJobCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                                CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PauseButtonStyle}">
                                                    <Setter Property="Content" Value="||"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Running">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Paused">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Completed">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Error">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Initialise">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <!-- Resume Button -->
                                        <Button Width="40" Height="24" 
                                                ToolTip="Resume" 
                                                Margin="2,0" 
                                                Command="{Binding DataContext.ResumeJobCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                                CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButtonStyle}">
                                                    <Setter Property="Content" Value="▶️"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Paused">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Initialise">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Error">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Completed">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Running">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <!-- Stop Button -->
                                        <Button Width="40" Height="24" 
                                                ToolTip="Stop" 
                                                Margin="2,0" 
                                                Command="{Binding DataContext.StopJobCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                                CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource StopButtonStyle}">
                                                    <Setter Property="Content" Value="■"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Running">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Paused">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Completed">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Error">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status.State}" Value="Initialise">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </ScrollViewer>

        <Border Grid.Row="2" Padding="0,15,0,0" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderBrush}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="ResumeButton" 
                        Content="{x:Static localization:Resources.BackupWorkManagementStartBackupSelected}" 
                        Command="{Binding ResumeJobCommand}"
                        CommandParameter="{x:Null}" Margin="5,5,10,5">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedJobs.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="PauseButton" 
                        Content="Pause" 
                        Margin="5" 
                        Command="{Binding PauseJobCommand}"
                        CommandParameter="{x:Null}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PauseButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedJobs.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="StopButton" 
                        Content="Stop" 
                        Margin="5" 
                        Command="{Binding StopJobCommand}"
                        CommandParameter="{x:Null}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource StopButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedJobs.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{x:Static localization:Resources.BackupWorkManagementDeleteBackupSelected}" 
                        Margin="5" 
                        Command="{Binding RemoveJobCommand}"
                        Click="DeleteSelectedJob_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource StopButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedJobs.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{x:Static localization:Resources.BackupWorkManagementNewBackup}" 
                        Style="{StaticResource ActionButtonStyle}"
                        Margin="100,5,5,5" 
                        Click="CreateNewJob_Click"/>
            </StackPanel>
        </Border>

        <Border Grid.Row="1" Grid.RowSpan="2" x:Name="CreateJobPanel" 
                Visibility="Collapsed" 
                Background="{StaticResource BackgroundLightBrush}" 
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="1"
                CornerRadius="4"
                Padding="25" 
                Margin="50,20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" />
            </Border.Effect>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" 
                          MaxHeight="500">
                <StackPanel>
                    <TextBlock Text="{x:Static localization:Resources.BackupWorkManagementNewBackup}" 
                               Style="{StaticResource SubHeaderTextBlockStyle}" 
                               Margin="0,0,0,15"/>
                    <TextBlock Text="{x:Static localization:Resources.ConfigNewJobName}" Margin="0,5,0,2"/>
                    <TextBox x:Name="JobNameTextBox" Margin="0,0,0,10">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                                        <Setter Property="ToolTip" Value="Le nom du travail est obligatoire"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock Text="{x:Static localization:Resources.ConfigNewJobSourceDirectory}" Margin="0,5,0,2"/>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="JobSourcePathTextBox" Grid.Column="0"/>
                        <Button Grid.Column="1" Content="{x:Static localization:Resources.Browse}" 
                                Margin="5,0,0,0" 
                                Click="BrowseSource_Click"/>
                    </Grid>
                    <TextBlock Text="{x:Static localization:Resources.ConfigNewJobTargetDirectory}" Margin="0,5,0,2"/>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="JobTargetPathTextBox" Grid.Column="0"/>
                        <Button Grid.Column="1" Content="{x:Static localization:Resources.Browse}" 
                                Margin="5,0,0,0" 
                                Click="BrowseTarget_Click"/>
                    </Grid>
                    <TextBlock Text="{x:Static localization:Resources.ConfigNewJobBackupType}" Margin="0,5,0,2"/>
                    <ComboBox x:Name="JobTypeComboBox" Margin="0,0,0,20">
                        <ComboBoxItem Content="{x:Static localization:Resources.BackupTypeFull}"/>
                        <ComboBoxItem Content="{x:Static localization:Resources.BackupTypeDifferential}"/>
                    </ComboBox>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Cancel" 
                                Style="{StaticResource StopButtonStyle}"
                                Margin="5" 
                                Click="CancelNewJob_Click"/>
                        <Button Content="{x:Static localization:Resources.ConfigNewJobValidate}" 
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="5" 
                                Click="ValidateNewJob_Click"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>